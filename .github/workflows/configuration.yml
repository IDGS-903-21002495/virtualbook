name: CI/CD â€¢ Deploy to Staging

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test:ci

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-report
          path: coverage/
          retention-days: 30

      - name: Generate test summary
        if: always()
        run: |
          echo "### Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Tests executed successfully" >> $GITHUB_STEP_SUMMARY
          echo "Coverage report available in artifacts" >> $GITHUB_STEP_SUMMARY

      - name: Build application
        run: npx ng build --configuration=staging

  deploy:
    needs: test
    runs-on: ubuntu-latest
    environment: staging
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build for staging
        run: npx ng build --configuration=staging

      - name: Deploy to Netlify
        uses: netlify/actions/cli@v4
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.VIRTUALBOOK }}
        with:
          args: deploy --dir=dist --site ${{ secrets.NETLIFY_SITE_ID }} --prod --message "staging deployment ${{ github.sha }}"